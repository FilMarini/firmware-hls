// Test bench generated by generator_verilog.py

`timescale 1 ns / 1 ps

//import global_pkg::*;

module tb_top_tf();

// Simulation constants and signals /////////////////////////////////
  time    c_CLK = 4;   // Clock periode
  integer f;           // File handle
  integer clk_cnt = 0; // Clock counter
// Signals to connect the DUT ///////////////////////////////////////
// Control signals
  logic clk;
  logic reset;
  logic en_proc;
  logic [2:0] bx_in_ProjectionRouter;
// PR inputs
  logic TPROJ_L3PHIC_dataarray_data_V_wea [7:0];
  logic [7:0] TPROJ_L3PHIC_dataarray_data_V_writeaddr [7:0];
  logic [59:0] TPROJ_L3PHIC_dataarray_data_V_din [7:0];
  logic TPROJ_L3PHIC_nentries_V_we [0:1][7:0];
  logic [6:0] TPROJ_L3PHIC_nentries_V_din [0:1][7:0];
// ME inputs
  logic VMSME_L3PHIC17to24n1_dataarray_data_V_wea [7:0];
  logic [9:0] VMSME_L3PHIC17to24n1_dataarray_data_V_writeaddr [7:0];
  logic [13:0] VMSME_L3PHIC17to24n1_dataarray_data_V_din [7:0]; 
  logic VMSME_L3PHIC17to24n1_nentries_V_we [0:7][7:0];
  logic [6:0] VMSME_L3PHIC17to24n1_nentries_V_din [0:7][7:0];
// MC inputs
  logic AS_L3PHICn4_dataarray_data_V_wea;
  logic [9:0] AS_L3PHICn4_dataarray_data_V_writeaddr;
  logic [35:0] AS_L3PHICn4_dataarray_data_V_din;
  logic AS_L3PHICn4_dataarray_nentries_V_we [0:7];
  logic [6:0] AS_L3PHICn4_dataarray_nentries_V_din [0:7];
// MC outputs
  logic FM_L1L2XX_L3PHIC_dataarray_data_V_enb            = 1'b0;
  logic [7:0] FM_L1L2XX_L3PHIC_dataarray_data_V_readaddr = '{default:0};
  logic [44:0] FM_L1L2XX_L3PHIC_dataarray_data_V_dout;
  logic [6:0] FM_L1L2XX_L3PHIC_nentries_0_V_dout [0:1];
  logic FM_L5L6XX_L3PHIC_dataarray_data_V_enb            = 1'b0;
  logic [7:0] FM_L5L6XX_L3PHIC_dataarray_data_V_readaddr = '{default:0};
  logic [44:0] FM_L5L6XX_L3PHIC_dataarray_data_V_dout;
  logic [6:0] FM_L5L6XX_L3PHIC_nentries_0_V_dout [0:1];
// More control signals
  logic [2:0] bx_out_MatchCalculator;
  logic MatchCalculator_done;


// Connect the DUT ////////////////////////////////////////////////////
top_tf top_tf_inst (
// Control signals
  .clk(clk),
  .reset(reset),
  .en_proc(en_proc),
  .bx_in_ProjectionRouter(bx_in_ProjectionRouter),
// PR inputs
  .TPROJ_L3PHIC_dataarray_data_V_wea(TPROJ_L3PHIC_dataarray_data_V_wea),
  .TPROJ_L3PHIC_dataarray_data_V_writeaddr(TPROJ_L3PHIC_dataarray_data_V_writeaddr),
  .TPROJ_L3PHIC_dataarray_data_V_din(TPROJ_L3PHIC_dataarray_data_V_din),
  .TPROJ_L3PHIC_nentries_V_we(TPROJ_L3PHIC_nentries_V_we),
  .TPROJ_L3PHIC_nentries_V_din(TPROJ_L3PHIC_nentries_V_din),
// ME inputs
  .VMSME_L3PHIC17to24n1_dataarray_data_V_wea(VMSME_L3PHIC17to24n1_dataarray_data_V_wea),
  .VMSME_L3PHIC17to24n1_dataarray_data_V_writeaddr(VMSME_L3PHIC17to24n1_dataarray_data_V_writeaddr),
  .VMSME_L3PHIC17to24n1_dataarray_data_V_din(VMSME_L3PHIC17to24n1_dataarray_data_V_din), 
  .VMSME_L3PHIC17to24n1_nentries_V_we(VMSME_L3PHIC17to24n1_nentries_V_we),
  .VMSME_L3PHIC17to24n1_nentries_V_din(VMSME_L3PHIC17to24n1_nentries_V_din),
// MC inputs
  .AS_L3PHICn4_dataarray_data_V_wea(AS_L3PHICn4_dataarray_data_V_wea),
  .AS_L3PHICn4_dataarray_data_V_writeaddr(AS_L3PHICn4_dataarray_data_V_writeaddr),
  .AS_L3PHICn4_dataarray_data_V_din(AS_L3PHICn4_dataarray_data_V_din),
  .AS_L3PHICn4_dataarray_nentries_V_we(AS_L3PHICn4_dataarray_nentries_V_we),
  .AS_L3PHICn4_dataarray_nentries_V_din(AS_L3PHICn4_dataarray_nentries_V_din),
// MC outputs
  .FM_L1L2XX_L3PHIC_dataarray_data_V_enb(FM_L1L2XX_L3PHIC_dataarray_data_V_enb),
  .FM_L1L2XX_L3PHIC_dataarray_data_V_readaddr(FM_L1L2XX_L3PHIC_dataarray_data_V_readaddr),
  .FM_L1L2XX_L3PHIC_dataarray_data_V_dout(FM_L1L2XX_L3PHIC_dataarray_data_V_dout),
  .FM_L1L2XX_L3PHIC_nentries_0_V_dout(FM_L1L2XX_L3PHIC_nentries_0_V_dout),
  .FM_L5L6XX_L3PHIC_dataarray_data_V_enb(FM_L5L6XX_L3PHIC_dataarray_data_V_enb),
  .FM_L5L6XX_L3PHIC_dataarray_data_V_readaddr(FM_L5L6XX_L3PHIC_dataarray_data_V_readaddr),
  .FM_L5L6XX_L3PHIC_dataarray_data_V_dout(FM_L5L6XX_L3PHIC_dataarray_data_V_dout),
  .FM_L5L6XX_L3PHIC_nentries_0_V_dout(FM_L5L6XX_L3PHIC_nentries_0_V_dout),
// More control signals
  .bx_out_MatchCalculator(bx_out_MatchCalculator),
  .MatchCalculator_done(MatchCalculator_done)
);




// Write output to file and input initialization 
initial  begin
 $dumpfile ("top_tf.vcd"); // Waveform
 $dumpvars; 
 f = $fopen("../../../../../output.txt","w");
 $fwrite(f,"  time clk_cnt reset   enb readaddr FM_L1L2XX_L3PHIC_*_dout" ,
                               "   enb readaddr FM_L1L2XX_L3PHIC_*_dout\n");
 clk   = 1'b0;
 reset = 1'b1;
end 

// Clock generation and file writing
always begin
  #(c_CLK/2) clk = !clk; 
  if (clk==1'b1) begin // Writing the file
    $fwrite(f,"%6d %7d     %b     %b       %h            %h     %b       %h            %h\n",
             $time,clk_cnt,reset,FM_L1L2XX_L3PHIC_dataarray_data_V_enb, FM_L1L2XX_L3PHIC_dataarray_data_V_readaddr, FM_L1L2XX_L3PHIC_dataarray_data_V_dout,
                                 FM_L5L6XX_L3PHIC_dataarray_data_V_enb, FM_L5L6XX_L3PHIC_dataarray_data_V_readaddr, FM_L5L6XX_L3PHIC_dataarray_data_V_dout);
    clk_cnt = clk_cnt+1;
  end
end

// Print to stdout
`define DEBUG 1
`define DISP "\ttime, clk_cnt, reset, \
FM_L1L2XX_L3PHIC_dataarray_data_V_enb, FM_L1L2XX_L3PHIC_dataarray_data_V_readaddr, FM_L1L2XX_L3PHIC_dataarray_data_V_dout, \
FM_L5L6XX_L3PHIC_dataarray_data_V_enb, FM_L5L6XX_L3PHIC_dataarray_data_V_readaddr, FM_L5L6XX_L3PHIC_dataarray_data_V_dout"
`define MON  "%d, %d, %b,   %b, %h, %h,   %b, %h, %h", \
              $time, clk_cnt, reset, FM_L1L2XX_L3PHIC_dataarray_data_V_enb, FM_L1L2XX_L3PHIC_dataarray_data_V_readaddr, FM_L1L2XX_L3PHIC_dataarray_data_V_dout, \
                                     FM_L5L6XX_L3PHIC_dataarray_data_V_enb, FM_L5L6XX_L3PHIC_dataarray_data_V_readaddr, FM_L5L6XX_L3PHIC_dataarray_data_V_dout
generate
if (`DEBUG==1) begin
  initial  begin
   $display(`DISP); 
   $monitor(`MON); 
   //#500   $finish; // Finish simulation after x time units
  end 
end
else begin
  initial begin
    $display(`DISP);
    //#5000  $finish; // Finish simulation after x time units
  end
  always begin
    #c_CLK  //if (vld_out) begin
              $display(`MON); 
            //end
  end
end
endgenerate
   
// Periodic test patterns
always begin
  #(c_CLK/2)  if (FM_L1L2XX_L3PHIC_dataarray_data_V_enb==1'b1) begin // Writing the file
                FM_L1L2XX_L3PHIC_dataarray_data_V_readaddr = FM_L1L2XX_L3PHIC_dataarray_data_V_readaddr+1;
                FM_L5L6XX_L3PHIC_dataarray_data_V_readaddr = FM_L5L6XX_L3PHIC_dataarray_data_V_readaddr+1;
              end
              if (FM_L5L6XX_L3PHIC_dataarray_data_V_enb==1'b1) begin // Writing the file
                FM_L5L6XX_L3PHIC_dataarray_data_V_readaddr = FM_L5L6XX_L3PHIC_dataarray_data_V_readaddr+1;
              end
end
//Rest of testbench code after this line 
initial begin
  #(c_CLK/2)
  #(c_CLK*9)    reset = 1'b0;
  #(c_CLK*10)   FM_L1L2XX_L3PHIC_dataarray_data_V_enb = 1'b1;
                FM_L5L6XX_L3PHIC_dataarray_data_V_enb = 1'b1;

  #(c_CLK*100) $fclose(f); $finish;
end




endmodule
